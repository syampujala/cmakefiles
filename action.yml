# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
          
      - name: install-cmake
        # You may pin to the exact commit or the version.
        # uses: Symbitic/install-cmake@301e932c0011b8d12d8bf33d4975fd1e17972709
        uses: Symbitic/install-cmake@v0.1.0
        with:
          # Version of CMake to install
          cmake: # default is 3.17.2
          # Version of ninja-build to install
          ninja: # default is 1.9.0
          # Override default platform with one of [win, mac, linux]
          platform: # optional
    
      - name: Build CMake
      # You may pin to the exact commit or the version.
      # uses: ashutoshvarma/action-cmake-build@0fbeeac8b1f9c8aef99e9eae9d78529ed3b0364b
      uses: ashutoshvarma/action-cmake-build@v1
      with:
        # Build directory where build files will be generated
        build-dir: # default is ${{ runner.workspace }}/build
        # CMake build type (Release, Debug, MinSizeRel, RelWithDebInfo)
        build-type: # default is Release
        # C Compiler for toolchain
        cc: # optional
        # C++ Compiler for toolchain
        cxx: # optional
        # CMake build target
        target: # optional
        # Number of concurrent jobs for build and test
        parallel: # optional, default is 4
        # Run CTest or not
        run-test: # optional, default is false
        # Run 'cmake --install' or not
        install-build: # optional, default is false
        # Update git submodules
        submodule-update: # optional, default is false
        # Misc Options to pass to CMake while configuring project
        configure-options: # optional
        # Misc Options to pass to CMake while building project using cmake --build
        build-options: # optional
        # Misc Options to pass to CMake while installing project using cmake --install
        install-options: # optional
        # Misc Options to pass to CTest
        ctest-options: # optional
    
      - name: cmake-configure
      # You may pin to the exact commit or the version.
      # uses: snickerbockers/cmake-configure@34c25d17135428976b13963a8e5e3b1b0b277fd1
      - uses: snickerbockers/cmake-configure@prerel1
  
